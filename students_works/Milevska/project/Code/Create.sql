CREATE TABLE IF NOT EXISTS ORM_DISCIPLINE
(
    ID   SERIAL      NOT NULL	CONSTRAINT ORM_DISCIPLINE_PKEY PRIMARY KEY,
    NAME VARCHAR(80) NOT NULL
);


CREATE TABLE IF NOT EXISTS ORM_TEST
(
    TEST_ID   SERIAL 	  NOT NULL	CONSTRAINT ORM_TEST_PKEY PRIMARY KEY,
    TEST_NAME VARCHAR(63) NOT NULL
);


CREATE TABLE IF NOT EXISTS ORM_USER
(
    ID         SERIAL  		NOT NULL   CONSTRAINT ORM_USER_PKEY PRIMARY KEY,
    EMAIL      VARCHAR(80)		   CONSTRAINT ORM_USER_EMAIL_KEY UNIQUE,
    PASSWORD   VARCHAR(80),
    ROLE       VARCHAR(10)	DEFAULT 'STANDARD'::CHARACTER VARYING,
    FIRST_NAME VARCHAR(80),
    LAST_NAME  VARCHAR(80)
);

CREATE TABLE IF NOT EXISTS ORM_QUESTION
(
    QUESTION_ID   SERIAL       NOT NULL	 CONSTRAINT ORM_QUESTION_PKEY PRIMARY KEY,
    QUESTION_TEXT VARCHAR(511) NOT NULL,
    TEST_ID       INTEGER		 CONSTRAINT ORM_QUESTION_TEST_ID_FKEY REFERENCES ORM_TEST,
    DISCIPLINE_ID INTEGER		 CONSTRAINT ORM_QUESTION_DISCIPLINE_ID_FKEY REFERENCES ORM_DISCIPLINE
);


CREATE TABLE IF NOT EXISTS ORM_ANSWER_VARIANT
(
    ANSWER_VARIANT_ID   SERIAL       NOT NULL   CONSTRAINT ORM_ANSWER_VARIANT_PKEY PRIMARY KEY,
    ANSWER_VARIANT_TEXT VARCHAR(511) NOT NULL,
    ANSWER_CHECK        BOOLEAN      NOT NULL,
    QUESTION_ID         INTEGER 		CONSTRAINT ORM_ANSWER_VARIANT_QUESTION_ID_FKEY REFERENCES ORM_QUESTION ON DELETE CASCADE
);
